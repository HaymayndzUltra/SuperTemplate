{
  "validator": "protocol_scripts",
  "protocol_id": "22",
  "validation_timestamp": "2025-10-20T18:59:22.931320Z",
  "overall_score": 0.7000000000000001,
  "validation_status": "fail",
  "issues": [
    "Referenced command paths not found: scripts/aggregate_evidence_5.py, scripts/generate_retrospective_report.py, scripts/run_protocol_5_gates.py, scripts/validate_gate_5_action_plan.py, scripts/validate_gate_5_integration.py, scripts/validate_gate_5_participation.py, scripts/validate_prerequisites_5.py"
  ],
  "recommendations": [
    "Document environment/dependency expectations",
    "Clarify access and credential requirements",
    "Document how command outputs are captured"
  ],
  "script_inventory": {
    "score": 1.0,
    "status": "pass",
    "issues": [
      "Referenced command paths not found: scripts/aggregate_evidence_5.py, scripts/generate_retrospective_report.py, scripts/run_protocol_5_gates.py, scripts/validate_gate_5_action_plan.py, scripts/validate_gate_5_integration.py, scripts/validate_gate_5_participation.py, scripts/validate_prerequisites_5.py"
    ],
    "recommendations": [],
    "details": {
      "command_count": 8,
      "commands": [
        "bash\n# Prerequisite validation",
        "python scripts/validate_prerequisites_5.py",
        "python scripts/validate_gate_5_participation.py --notes .artifacts/protocol-22/session-notes.md",
        "python scripts/validate_gate_5_action_plan.py --register .artifacts/protocol-22/action-register.csv",
        "python scripts/validate_gate_5_integration.py --log .artifacts/protocol-22/integration-confirmation-log.json",
        "python scripts/aggregate_evidence_5.py --output .artifacts/protocol-22/",
        "python scripts/run_protocol_5_gates.py",
        "bash\n     python scripts/generate_retrospective_report.py --inputs .artifacts/protocol-5 --output .artifacts/protocol-22/retrospective-report.md"
      ],
      "missing_scripts": [
        "scripts/validate_prerequisites_5.py",
        "scripts/validate_gate_5_participation.py",
        "scripts/validate_gate_5_action_plan.py",
        "scripts/validate_gate_5_integration.py",
        "scripts/aggregate_evidence_5.py",
        "scripts/run_protocol_5_gates.py",
        "scripts/generate_retrospective_report.py"
      ]
    }
  },
  "registry_alignment": {
    "score": 0.75,
    "status": "warning",
    "issues": [],
    "recommendations": [],
    "details": {
      "registry_file": "/home/haymayndz/AI-DRIVEN-TEMPLATE-TESTING/scripts/script-registry.json",
      "registry_available": true,
      "registry_reference": true,
      "workflow_mapping": true,
      "ownership": true,
      "total_commands": 8,
      "registered_commands": 0,
      "registration_ratio": 0.0,
      "unregistered_commands": []
    }
  },
  "execution_context": {
    "score": 0.25,
    "status": "fail",
    "issues": [],
    "recommendations": [
      "Document environment/dependency expectations",
      "Clarify access and credential requirements"
    ],
    "details": {
      "ci_context": true,
      "environment": false,
      "scheduling": false,
      "permissions": false
    }
  },
  "command_syntax": {
    "score": 0.5,
    "status": "fail",
    "issues": [],
    "recommendations": [
      "Document how command outputs are captured"
    ],
    "details": {
      "command_count": 8,
      "flag_usage": true,
      "output_redirection": false,
      "parameterization": false,
      "documentation": true
    }
  },
  "error_handling": {
    "score": 1.0,
    "status": "pass",
    "issues": [],
    "recommendations": [],
    "details": {
      "exit_codes": true,
      "fallback": true,
      "logging": true,
      "manual_paths": true
    }
  }
}