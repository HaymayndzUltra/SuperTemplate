# PROTOCOL REQUIREMENTS FORM - PROTOCOL 11

protocol_number: "11"
protocol_name: "production-deployment-release-management"
domain_compliance: "DevOps Operations"
purpose: "Execute production deployment with controlled approvals, zero-downtime strategy, and comprehensive release evidence."

ai_role: "Release Manager"
primary_guardrail: "DO NOT trigger production deployment without explicit go-live approval, validated rollback plan, and health check readiness"
prerequisites:
  - protocol: "10-pre-deployment-staging"
    required_artifacts: "staging-validation-pack, smoke-test-results, rollback-rehearsal-report"
  - protocol: "04-quality-audit"
    required_artifacts: "quality-audit-report, security-scan-results"
phase_in_workflow: "Between Protocol 10 (Pre-Deployment Validation) and Protocol 12 (Post-Deployment Monitoring)"

phases:
  - phase_number: 1
    phase_name: "Release Readiness & Approval Confirmation"
    objective: "Consolidate release candidate evidence and confirm governance approvals"
    steps:
      - step_number: 1
        action_type: "MUST"
        action_title: "Consolidate Release Candidate Artifacts"
        instructions: "Gather release notes, changelog, and validation reports"
        communication_template: "[PHASE 1 START] - Consolidating release candidate artifacts and validation reports..."
        halt_condition: ""
      - step_number: 2
        action_type: "MUST"
        action_title: "Validate Governance Approvals"
        instructions: "Confirm CAB approvals, business sign-off, and rollback owner acknowledgment"
        communication_template: "Verifying CAB approvals, business sign-off, and rollback readiness before deployment..."
        halt_condition: "Stop until release-approvals.json contains all required approvals"
      - step_number: 3
        action_type: "GUIDELINE"
        action_title: "Confirm Operational Guardrails"
        instructions: "Ensure on-call coverage, communication channels, and monitoring baselines are ready"
        communication_template: "Documenting launch window guardrails and on-call responder coverage..."
        halt_condition: ""
    evidence_collection:
      - evidence_item: "Release readiness checklist"
        storage_location: ".artifacts/deployment/release-readiness-checklist.md"
      - evidence_item: "Release approvals log"
        storage_location: ".artifacts/deployment/release-approvals.json"
      - evidence_item: "Rollback plan"
        storage_location: ".artifacts/deployment/rollback-plan.md"
    quality_gate:
      gate_name: "Release Authorization Gate"
      criteria: "Approvals recorded, rollback plan validated, readiness checklist complete"
      failure_handling: "Escalate missing approvals or rollback gaps before proceeding"

  - phase_number: 2
    phase_name: "Deployment Execution & Control"
    objective: "Deploy release candidate with staged verification and telemetry capture"
    steps:
      - step_number: 1
        action_type: "MUST"
        action_title: "Execute Staging Verification Deployment"
        instructions: "Redeploy to staging with release tag and execute smoke tests"
        communication_template: "[PHASE 2 START] - Executing staging verification deployment for release candidate..."
        halt_condition: ""
      - step_number: 2
        action_type: "MUST"
        action_title: "Request Go-Live Authorization"
        instructions: "Present staging summary and request explicit approval"
        communication_template: "Staging verification successful. Requesting go-live authorization..."
        halt_condition: "Await approval response"
      - step_number: 3
        action_type: "MUST"
        action_title: "Execute Production Deployment Strategy"
        instructions: "Perform deployment using approved strategy while monitoring health"
        communication_template: "Initiating production deployment using {strategy} strategy with live health monitoring..."
        halt_condition: ""
      - step_number: 4
        action_type: "GUIDELINE"
        action_title: "Capture Deployment Telemetry"
        instructions: "Stream logs and metrics to observability stack with deployment annotations"
        communication_template: "Streaming deployment telemetry and annotating monitoring timelines..."
        halt_condition: ""
    evidence_collection:
      - evidence_item: "Staging verification report"
        storage_location: ".artifacts/deployment/staging-validation-report.json"
      - evidence_item: "Production deployment report"
        storage_location: ".artifacts/deployment/production-deployment-report.json"
      - evidence_item: "Deployment telemetry"
        storage_location: ".artifacts/deployment/deployment-telemetry.ndjson"
    quality_gate:
      gate_name: "Production Deployment Gate"
      criteria: "Staging verification passed, go-live approval captured, production deployment completed without critical alerts"
      failure_handling: "Trigger rollback, notify incident response, document failure"

  - phase_number: 3
    phase_name: "Post-Deployment Stabilization & Handoff"
    objective: "Verify health, communicate status, and archive release artifacts"
    steps:
      - step_number: 1
        action_type: "MUST"
        action_title: "Perform Immediate Health Verification"
        instructions: "Monitor key SLIs and infrastructure metrics during stabilization window"
        communication_template: "[PHASE 3 START] - Monitoring post-deployment health metrics during stabilization window..."
        halt_condition: ""
      - step_number: 2
        action_type: "MUST"
        action_title: "Communicate Release Status"
        instructions: "Send release summary to stakeholders with known issues and next steps"
        communication_template: "Publishing release summary and next steps to stakeholders..."
        halt_condition: ""
      - step_number: 3
        action_type: "GUIDELINE"
        action_title: "Archive Release Artifacts"
        instructions: "Store release evidence and telemetry for audits and retrospectives"
        communication_template: "Archiving release artifacts and linking to monitoring annotations..."
        halt_condition: ""
    evidence_collection:
      - evidence_item: "Release health report"
        storage_location: ".artifacts/deployment/release-health-report.md"
      - evidence_item: "Stakeholder communication log"
        storage_location: ".artifacts/deployment/release-communication-log.md"
      - evidence_item: "Release archive manifest"
        storage_location: ".artifacts/deployment/release-archive-manifest.json"
    quality_gate:
      gate_name: "Stabilization & Handoff Gate"
      criteria: "Metrics within thresholds, stakeholders notified, artifacts archived"
      failure_handling: "Escalate to incident response or extend monitoring"

inputs_from:
  - protocol: "10-pre-deployment-staging"
    artifacts_consumed: "staging-validation-pack, smoke-test-results, rollback-rehearsal-report"
    usage: "Confirm release readiness and rollback preparedness"
  - protocol: "04-quality-audit"
    artifacts_consumed: "quality-audit-report, security-scan-results"
    usage: "Ensure quality gates satisfied before release"

outputs_to:
  - protocol: "12-post-deployment-monitoring-observability"
    artifacts_provided: "deployment-telemetry.ndjson, release-health-report.md"
    purpose: "Enable observability and monitoring handoff"
  - protocol: "05-implementation-retrospective"
    artifacts_provided: "release-readiness-checklist.md, release-archive-manifest.json"
    purpose: "Support retrospective and compliance review"

automation_hooks:
  - hook_name: "release_gatekeeper.py"
    trigger_point: "Before production deployment"
    command: "python scripts/release_gatekeeper.py --checklist .artifacts/deployment/release-readiness-checklist.md"
    expected_output: "Validation summary confirming release readiness"
  - hook_name: "deployment_executor.py"
    trigger_point: "Production deployment"
    command: "python scripts/deployment_executor.py --strategy bluegreen --output .artifacts/deployment/production-deployment-report.json"
    expected_output: "Deployment status with metrics and timestamps"
  - hook_name: "stabilization_monitor.py"
    trigger_point: "Post-deployment stabilization"
    command: "python scripts/stabilization_monitor.py --duration 30 --output .artifacts/deployment/release-health-report.md"
    expected_output: "Health metrics summary for stabilization window"

communication_protocols:
  status_announcements:
    - "[PHASE 1 START] - Release readiness confirmation in progress."
    - "[PHASE 2 START] - Deployment execution and go-live approvals underway."
    - "[PHASE 3 START] - Stabilization monitoring and stakeholder communications in progress."
  validation_prompts:
    - "[VALIDATION REQUEST] - Release readiness checklist complete. Approve progression to deployment execution? (yes/no)"
    - "[APPROVAL REQUEST] Staging verification succeeded. Proceed with production deployment? (yes/no)"
    - "[VALIDATION REQUEST] - Stabilization complete. Publish release summary and handoff to monitoring? (yes/no)"
  error_messages:
    - code: "MissingApproval"
      message: "[ERROR] Required release approvals missing from release-approvals.json."
    - code: "DeploymentFailure"
      message: "[ERROR] Production deployment reported critical alerts."
    - code: "HealthDegradation"
      message: "[ERROR] Post-deployment metrics outside thresholds."
