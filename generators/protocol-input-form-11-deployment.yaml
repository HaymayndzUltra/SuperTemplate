# PROTOCOL REQUIREMENTS FORM - PROTOCOL 11
# Production Deployment & Release Management

## ============================================
## SECTION 1: BASIC INFORMATION
## ============================================

protocol_number: "11"
protocol_name: "production-deployment"
domain_compliance: "Release Management"
purpose: "Coordinate production releases with controlled approvals, automated deployment execution, and documented post-release validation."

## ============================================
## SECTION 2: AI ROLE & CONTEXT
## ============================================

ai_role: "Release Manager"
primary_guardrail: "DO NOT deploy to production without explicit go/no-go approval and verified rollback readiness."

prerequisites:
  - protocol: "10-pre-deployment-staging"
    required_artifacts: "staging-validation-report.json, release-readiness-checklist.md, rollback-plan.md"
  - protocol: "4-quality-audit"
    required_artifacts: "quality-audit-report.md, security-approval.json"

phase_in_workflow: "After Protocol 10 (Pre-Deployment) and before Protocol 12 (Monitoring) within the release pipeline."

## ============================================
## SECTION 3: EXECUTION STRUCTURE
## ============================================

phases:
  - phase_number: 1
    phase_name: "Release Readiness Confirmation"
    objective: "Validate prerequisites, confirm release scope, and secure go/no-go approvals before production deployment."

    steps:
      - step_number: 1
        action_type: "MUST"
        action_title: "Verify Release Prerequisites"
        instructions: "Confirm staging validation, quality audit approvals, and rollback assets are present and current."
        communication_template: "[PHASE 1] Verifying release prerequisites and gating artifacts..."
        halt_condition: "Stop if any prerequisite artifact is missing or outdated."

      - step_number: 2
        action_type: "MUST"
        action_title: "Review Release Scope & Risks"
        instructions: "Summarize deployment scope, associated tickets, known risks, and mitigation plans; update release runbook."
        communication_template: "[BRIEFING] Compiling release scope, risks, and mitigation strategy..."
        halt_condition: "Await stakeholder confirmation for high-risk changes."

      - step_number: 3
        action_type: "MUST"
        action_title: "Conduct Go/No-Go Meeting"
        instructions: "Facilitate sign-off with stakeholders, document approvals, and confirm freeze windows & communication plan."
        communication_template: "[APPROVAL] Requesting go/no-go decision from release stakeholders..."
        halt_condition: "Await explicit go/no-go decision recorded in approval log."

    evidence_collection:
      - evidence_item: "release-readiness-audit.json"
        storage_location: ".artifacts/deployment/release-readiness-audit.json"
      - evidence_item: "release-brief.md"
        storage_location: ".artifacts/deployment/release-brief.md"
      - evidence_item: "go-no-go-approval.json"
        storage_location: ".artifacts/deployment/go-no-go-approval.json"

    quality_gate:
      gate_name: "Go/No-Go Gate"
      criteria: "All prerequisites validated, release brief updated, and go/no-go approval captured with decision maker signatures."
      failure_handling: "Abort release, address missing prerequisites, reschedule once approval criteria met."

  - phase_number: 2
    phase_name: "Controlled Production Deployment"
    objective: "Execute deployment pipeline with staged rollout, monitoring, and rollback readiness."

    steps:
      - step_number: 1
        action_type: "MUST"
        action_title: "Prepare Deployment Environment"
        instructions: "Lock release window, snapshot current production state, and notify stakeholders of deployment start."
        communication_template: "[PHASE 2] Preparing production environment and locking release window..."
        halt_condition: "Stop if environment snapshot fails or release freeze violated."

      - step_number: 2
        action_type: "MUST"
        action_title: "Execute Deployment Pipeline"
        instructions: "Run automated deployment scripts, migrations, and infrastructure updates with staged rollout (canary/blue-green)."
        communication_template: "[DEPLOYMENT] Executing production deployment pipeline..."
        halt_condition: "Pause between stages for health check validation."

      - step_number: 3
        action_type: "MUST"
        action_title: "Monitor Real-Time Health"
        instructions: "Monitor dashboards, logs, and alerts during rollout; be prepared to trigger rollback if thresholds breached."
        communication_template: "[MONITORING] Observing live metrics and alerts during rollout..."
        halt_condition: "Stop rollout immediately if critical alerts triggered."

    evidence_collection:
      - evidence_item: "deployment-run-log.txt"
        storage_location: ".artifacts/deployment/deployment-run-log.txt"
      - evidence_item: "deployment-health-metrics.json"
        storage_location: ".artifacts/deployment/deployment-health-metrics.json"
      - evidence_item: "rollback-readiness-checklist.md"
        storage_location: ".artifacts/deployment/rollback-readiness-checklist.md"

    quality_gate:
      gate_name: "Deployment Success Gate"
      criteria: "Deployment steps complete with zero critical alerts, health metrics stable, and rollback readiness maintained."
      failure_handling: "Initiate rollback, capture incident summary, and notify stakeholders."

  - phase_number: 3
    phase_name: "Post-Release Validation & Communication"
    objective: "Validate release success, finalize documentation, and transition to monitoring/incident management."

    steps:
      - step_number: 1
        action_type: "MUST"
        action_title: "Run Post-Deployment Validation"
        instructions: "Execute smoke tests, synthetic monitoring checks, and business-critical workflows to confirm functionality."
        communication_template: "[PHASE 3] Running post-deployment validation checks..."
        halt_condition: "Stop if validation tests fail; evaluate rollback or hotfix."

      - step_number: 2
        action_type: "GUIDELINE"
        action_title: "Publish Release Communications"
        instructions: "Send release summary, known issues, and next steps to stakeholders; update change log and status channels."
        communication_template: "[COMMUNICATION] Publishing release summary and stakeholder updates..."
        halt_condition: ""

      - step_number: 3
        action_type: "MUST"
        action_title: "Archive Release Evidence"
        instructions: "Store run logs, approvals, validation results, and post-release metrics for audit and monitoring protocols."
        communication_template: "[EVIDENCE] Archiving release evidence for monitoring and incident response..."
        halt_condition: ""

    evidence_collection:
      - evidence_item: "post-release-validation-report.json"
        storage_location: ".artifacts/deployment/post-release-validation-report.json"
      - evidence_item: "release-communications.md"
        storage_location: ".artifacts/deployment/release-communications.md"
      - evidence_item: "release-evidence-bundle.zip"
        storage_location: ".artifacts/deployment/release-evidence-bundle.zip"

    quality_gate:
      gate_name: "Post-Release Validation Gate"
      criteria: "All validation checks pass, communications delivered, and evidence archived for monitoring handoff."
      failure_handling: "Escalate to incident response protocol, execute rollback or hotfix, and communicate status."

## ============================================
## SECTION 4: INTEGRATION & DATA FLOW
## ============================================

inputs_from:
  - protocol: "10-pre-deployment-staging"
    artifacts_consumed: "staging-validation-report.json, release-readiness-checklist.md, rollback-plan.md"
    usage: "Validate staging success, confirm rollback steps, and align release scope."
  - protocol: "4-quality-audit"
    artifacts_consumed: "quality-audit-report.md, security-approval.json"
    usage: "Ensure quality and security gates passed before production deployment."

outputs_to:
  - protocol: "12-monitoring-observability"
    artifacts_provided: "deployment-run-log.txt, deployment-health-metrics.json, post-release-validation-report.json"
    purpose: "Provide monitoring team with baseline metrics and deployment context for live observation."
  - protocol: "13-incident-response-rollback"
    artifacts_provided: "rollback-readiness-checklist.md, release-evidence-bundle.zip"
    purpose: "Supply incident responders with rollback procedures and release evidence if issues arise."
  - protocol: "5-implementation-retrospective"
    artifacts_provided: "release-brief.md, release-communications.md"
    purpose: "Enable retrospective analysis of release effectiveness and process improvements."

## ============================================
## SECTION 5: AUTOMATION & TOOLING
## ============================================

automation_hooks:
  - hook_name: "release_readiness_check"
    trigger_point: "Phase 1 prerequisite verification"
    command: "python scripts/validation_gates.py --gate release-readiness --output .artifacts/deployment/release-readiness-audit.json"
    expected_output: "release-readiness-audit.json summarizing gate status and issues"

  - hook_name: "deploy_backend"
    trigger_point: "Phase 2 deployment execution"
    command: "bash scripts/deploy_backend.sh --env production --log .artifacts/deployment/deployment-run-log.txt"
    expected_output: "deployment-run-log.txt capturing command output and status codes"

  - hook_name: "rollback_backend"
    trigger_point: "Phase 2 if deployment fails"
    command: "bash scripts/rollback_backend.sh --env production --log .artifacts/deployment/rollback-run-log.txt"
    expected_output: "rollback-run-log.txt documenting rollback actions"

  - hook_name: "collect_perf"
    trigger_point: "Phase 3 validation"
    command: "python scripts/collect_perf.py --env production --output .artifacts/deployment/deployment-health-metrics.json"
    expected_output: "deployment-health-metrics.json with key performance indicators"

## ============================================
## SECTION 6: COMMUNICATION PROTOCOLS
## ============================================

announcements:
  phase_start_template: "[RELEASE PHASE {N} START] - Beginning {phase_name}..."
  phase_complete_template: "[RELEASE PHASE {N} COMPLETE] - {phase_name} finished successfully."
  automation_status_template: "[AUTOMATION] {script_name} executed: {status}"

validation_prompts:
  - prompt_context: "Go/No-Go decision"
    prompt_template: "[GO/NO-GO] Prerequisites validated. Approve production deployment? (go/no-go)"

  - prompt_context: "Post-deployment validation"
    prompt_template: "[VALIDATION] Post-release checks completed. Confirm release ready for monitoring handoff? (yes/no)"

error_handling:
  - error_type: "MissingPrerequisites"
    error_message_template: "[ERROR] Required release prerequisites missing or outdated."
    recovery_steps: "1. Identify missing artifact, 2. Request update from owning protocol, 3. Re-run readiness check."

  - error_type: "DeploymentFailure"
    error_message_template: "[CRITICAL] Deployment failure detected: {details}."
    recovery_steps: "1. Halt deployment, 2. Execute rollback_backend.sh, 3. Notify stakeholders, 4. Escalate to incident response."

  - error_type: "ValidationFailure"
    error_message_template: "[ERROR] Post-release validation failed: {failing_checks}."
    recovery_steps: "1. Evaluate severity, 2. Trigger incident response if needed, 3. Decide on rollback or hotfix, 4. Communicate status."

## ============================================
## SECTION 7: COMPLETION & HANDOFF
## ============================================

completion_checklist:
  - "Release prerequisites validated and approved"
  - "Go/no-go decision recorded"
  - "Deployment executed with logs archived"
  - "Post-release validation passed"
  - "Release communications delivered"
  - "Evidence bundle archived for monitoring and incident response"

handoff_command: "[PROTOCOL COMPLETE] - Production deployment finalized. Ready for Protocol 12 (Monitoring & Observability)."

next_protocol: "12-monitoring-observability"

## ============================================
## SECTION 8: ADDITIONAL CONTEXT (OPTIONAL)
## ============================================

context: "Executes controlled production releases that maintain auditability, ensure rollback readiness, and provide monitoring teams with actionable context."

focus_areas:
  - "Stakeholder approvals and governance"
  - "Automated deployment with staged rollout"
  - "Evidence archiving for monitoring and retrospectives"

special_considerations: "For multi-region releases, repeat deployment execution per region with monitoring thresholds adjusted for propagation delays."
